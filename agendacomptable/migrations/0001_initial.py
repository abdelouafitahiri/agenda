# Generated by Django 5.0.9 on 2025-01-18 22:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CriteresPaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, null=True, verbose_name='Type de Paiement')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Critère de Paiement',
                'verbose_name_plural': 'Critères de Paiement',
            },
        ),
        migrations.CreateModel(
            name='Comptable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lib_08', models.CharField(blank=True, max_length=25, null=True)),
                ('adr_08', models.CharField(blank=True, max_length=75, null=True)),
                ('mail_08', models.EmailField(blank=True, max_length=35, null=True)),
                ('tel_08', models.CharField(blank=True, max_length=12, null=True)),
                ('contact_08', models.CharField(blank=True, max_length=25, null=True)),
                ('date_create_08', models.DateTimeField(auto_now_add=True)),
                ('date_edit_08', models.DateTimeField(auto_now=True)),
                ('default_08', models.CharField(blank=True, default='F', max_length=1, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('user_create_08', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_comptables', to=settings.AUTH_USER_MODEL)),
                ('user_edit_08', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_comptables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comptable',
                'verbose_name_plural': 'Comptables',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=20)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_edit', models.DateTimeField(auto_now=True)),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contacts', to=settings.AUTH_USER_MODEL)),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_contacts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison_sociale', models.CharField(max_length=70, verbose_name='Raison Sociale')),
                ('activite', models.CharField(max_length=100, verbose_name='Activité')),
                ('ville', models.CharField(max_length=45, verbose_name='Ville')),
                ('adresse', models.TextField(verbose_name='Adresse')),
                ('email', models.EmailField(max_length=100, verbose_name='E-Mail')),
                ('date_creation', models.DateField(null=True)),
                ('ice', models.CharField(blank=True, max_length=24, null=True, verbose_name='ICE')),
                ('identifiant_fiscal', models.CharField(blank=True, max_length=24, null=True, verbose_name='IF')),
                ('cnss', models.CharField(blank=True, max_length=24, null=True, verbose_name='CNSS')),
                ('registre_commerce', models.CharField(blank=True, max_length=24, null=True, verbose_name='RC')),
                ('domiciliation', models.BooleanField(default=False)),
                ('tenue_comptabilite', models.BooleanField(default=False)),
                ('date_reception_dossier', models.DateField(blank=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_edit', models.DateTimeField(auto_now=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('cabinet_comptable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agendacomptable.comptable')),
                ('contacts', models.ManyToManyField(blank=True, related_name='customer_files', to='agendacomptable.contact', verbose_name='Contacts')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerfile_created_by', to=settings.AUTH_USER_MODEL)),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerfile_edited_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContratPersonnePhysique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_prenom', models.CharField(max_length=255, verbose_name='Nom et Prénom')),
                ('loyer_mensuel_contrat', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Loyer mensuel (contrat)')),
                ('loyer_mensuel_plateforme', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Loyer mensuel (plateforme)')),
                ('date_debut', models.DateField(verbose_name='Date de Début')),
                ('date_fin', models.DateField(verbose_name='Date de Fin')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de Naissance')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('date_contrat', models.DateField(verbose_name='Date du Contrat')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de Modification')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrats_physiques', to='agendacomptable.customerfile', verbose_name='Fichier Client')),
            ],
        ),
        migrations.CreateModel(
            name='ContratPersonneMorale',
            fields=[
                ('nom_soc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nom de la société')),
                ('id_contrat', models.AutoField(primary_key=True, serialize=False, verbose_name='Numéro du contrat')),
                ('registre_commerce', models.CharField(max_length=255, verbose_name='Numéro du registre de commerce')),
                ('nom_representant', models.CharField(max_length=255, verbose_name='Nom complet du représentant légal')),
                ('cin_representant', models.CharField(max_length=50, verbose_name='CIN du représentant légal')),
                ('date_naissance_representant', models.DateField(blank=True, null=True, verbose_name='Date de naissance du représentant légal')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('loyer_mensuel_contrat', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Loyer mensuel (contrat)')),
                ('loyer_mensuel_plateforme', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Loyer mensuel (plateforme)')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('date_contrat', models.DateField(verbose_name='Date du contrat')),
                ('periode_renouvellement', models.CharField(blank=True, max_length=50, null=True, verbose_name='Période de renouvellement')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création en Système')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Dernière Modification')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contrats_personne_morale_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contrats_personne_morale_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrats_moraux', to='agendacomptable.customerfile', verbose_name='Fichier Client')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='customer_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_contacts', to='agendacomptable.customerfile'),
        ),
        migrations.CreateModel(
            name='Associe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=45, null=True, verbose_name='Nom')),
                ('prenom', models.CharField(blank=True, max_length=45, null=True, verbose_name='Prénom')),
                ('datn', models.DateField(blank=True, null=True, verbose_name='Date de Naissance')),
                ('cine', models.CharField(blank=True, max_length=45, null=True, verbose_name='CIN')),
                ('adresse', models.CharField(blank=True, max_length=45, null=True, verbose_name='Adresse')),
                ('parts', models.IntegerField(blank=True, null=True, verbose_name='Parts')),
                ('montant', models.FloatField(blank=True, null=True, verbose_name='Montant')),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_edit', models.DateTimeField(auto_now=True)),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associes', to='agendacomptable.customerfile')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('date_debut', models.DateField(verbose_name='Start Date')),
                ('date_fin', models.DateField(verbose_name='End Date')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Paid')),
                ('is_fully_paid', models.BooleanField(default=False, verbose_name='Fully Paid')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='agendacomptable.customerfile', verbose_name='Customer File')),
            ],
        ),
        migrations.CreateModel(
            name='EDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/', verbose_name='Fichier')),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_edit', models.DateTimeField(auto_now=True)),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edocuments', to='agendacomptable.customerfile')),
            ],
        ),
        migrations.CreateModel(
            name='Exercice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=4, null=True, verbose_name='Libellé')),
                ('default', models.CharField(max_length=1, null=True, verbose_name='Défaut')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archivé')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exercice_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exercice_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Exercice',
                'verbose_name_plural': 'Exercices',
            },
        ),
        migrations.CreateModel(
            name='FiscalRegime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Type de Régime')),
                ('option', models.CharField(blank=True, max_length=50, null=True, verbose_name='Option')),
                ('tva_period', models.CharField(blank=True, choices=[('Mensuelle', 'Mensuelle'), ('Trimestrielle', 'Trimestrielle')], max_length=20, null=True, verbose_name='Période (TVA)')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fiscal_regimes', to='agendacomptable.customerfile', verbose_name='Fiche Client')),
            ],
        ),
        migrations.CreateModel(
            name='FormeJuridique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=35, null=True, verbose_name='Libellé')),
                ('alias', models.CharField(max_length=5, null=True, verbose_name='Alias')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False)),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forme_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forme_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Forme Juridique',
                'verbose_name_plural': 'Formes Juridiques',
            },
        ),
        migrations.AddField(
            model_name='customerfile',
            name='forme_juridique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='agendacomptable.formejuridique'),
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Année')),
                ('month', models.PositiveSmallIntegerField(choices=[(1, 'Janvier'), (2, 'Février'), (3, 'Mars'), (4, 'Avril'), (5, 'Mai'), (6, 'Juin'), (7, 'Juillet'), (8, 'Août'), (9, 'Septembre'), (10, 'Octobre'), (11, 'Novembre'), (12, 'Décembre')], verbose_name='Mois')),
                ('is_active', models.BooleanField(default=False, verbose_name='Activé pour la préparation')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='PartialPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Payment Amount')),
                ('date_payment', models.DateTimeField(auto_now_add=True, verbose_name='Payment Date')),
                ('month', models.DateField(verbose_name='Payment Month')),
                ('customer_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partial_payments', to='agendacomptable.customerservice', verbose_name='Customer Service')),
            ],
        ),
        migrations.CreateModel(
            name='Qualite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=25, null=True, verbose_name='Libellé')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archivé')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qualite_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qualite_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Qualité',
                'verbose_name_plural': 'Qualités',
            },
        ),
        migrations.CreateModel(
            name='Regime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=25, null=True, verbose_name='Libellé')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False)),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regime_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regime_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Régime',
                'verbose_name_plural': 'Régimes',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=75, null=True, verbose_name='Libellé')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=8, null=True, verbose_name='Prix')),
                ('etat', models.CharField(default='T', max_length=1, verbose_name='État')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False)),
                ('criteres_paiement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='agendacomptable.criterespaiement', verbose_name='Critère de Paiement')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.AddField(
            model_name='customerservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agendacomptable.service', verbose_name='Service'),
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=6, null=True, verbose_name='Numéro')),
                ('libelle', models.CharField(max_length=70, null=True, verbose_name='Raison Sociale')),
                ('ice', models.CharField(max_length=24, null=True, verbose_name='ICE')),
                ('if_field', models.CharField(max_length=24, null=True, verbose_name='IF')),
                ('rc', models.CharField(max_length=24, null=True, verbose_name='RC')),
                ('activite', models.TextField(max_length=250, null=True, verbose_name='Activité')),
                ('adresse', models.CharField(max_length=250, null=True, verbose_name='Adresse')),
                ('date_creation', models.DateField(null=True, verbose_name='Date de Création')),
                ('gerant', models.CharField(max_length=24, null=True, verbose_name='Gérant')),
                ('ville', models.CharField(max_length=24, null=True, verbose_name='Ville')),
                ('cin', models.CharField(max_length=24, null=True, verbose_name='CIN')),
                ('mail', models.EmailField(max_length=70, null=True, verbose_name='Mail')),
                ('rib', models.CharField(max_length=34, null=True, verbose_name='RIB')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
                ('libelle_ar', models.CharField(max_length=70, null=True, verbose_name='الاسم التجاري')),
                ('activite_ar', models.TextField(max_length=250, null=True, verbose_name='الخدمات')),
                ('adresse_ar', models.CharField(max_length=250, null=True, verbose_name='العنوان')),
                ('ville_ar', models.CharField(max_length=24, null=True, verbose_name='المدينة')),
                ('gerant_ar', models.CharField(max_length=24, null=True, verbose_name='المسير')),
                ('cnss', models.CharField(max_length=24, null=True, verbose_name='CNSS')),
                ('header', models.CharField(max_length=225, null=True, verbose_name='En-tête')),
                ('footer', models.CharField(max_length=225, null=True, verbose_name='Pied de page')),
                ('capital', models.IntegerField(null=True, verbose_name='Capital')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création en Système')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Dernière Modification')),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='societe_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='societe_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
            },
        ),
        migrations.CreateModel(
            name='TypeReg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=15, null=True, verbose_name='Libellé')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_archived', models.BooleanField(default=False)),
                ('user_create', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typereg_createur', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('user_edit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typereg_editeur', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Type de Régime',
                'verbose_name_plural': 'Types de Régimes',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(verbose_name='Mois')),
                ('year', models.IntegerField(verbose_name='Année')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Payé')),
                ('date_payment', models.DateField(blank=True, null=True, verbose_name='Date de Paiement')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Date de Modification')),
                ('customer_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='agendacomptable.customerfile', verbose_name='Dossier Client')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='agendacomptable.customerservice', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'unique_together': {('customer_file', 'service', 'month', 'year')},
            },
        ),
    ]
